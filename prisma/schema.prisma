
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String   // bcrypt
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  measurements Measurement[]
}

enum Role {
  USER
  ADMIN
}

model Measurement {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  name          String   // measurement name
  note          String?  // optional note
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  analyses      BreastAnalysis[]
}

model BreastAnalysis {
  id              String   @id @default(cuid())
  measurementId   String
  measurement     Measurement @relation(fields: [measurementId], references: [id], onDelete: Cascade)
  measurementType MeasurementType
  leftVolumeMl    Float?   // null until analysis is complete
  rightVolumeMl   Float?   // null until analysis is complete
  leftConfidence  Float?   // AI confidence score for left
  rightConfidence Float?   // AI confidence score for right
  leftFilePath    String?  // path to uploaded file for left
  rightFilePath   String?  // path to uploaded file for right
  leftFileName    String?  // original file name for left
  rightFileName   String?  // original file name for right
  leftFileSize    Int?     // file size in bytes for left
  rightFileSize   Int?     // file size in bytes for right
  leftMimeType    String?  // file mime type for left
  rightMimeType   String?  // file mime type for right
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum MeasurementType {
  AI
  MANUAL
}
